#!/usr/bin/env bash

dataDir="$HOME/code/dotFiles/anx-api"

function mycurl(){
	result=$(http --print=hb --session=$@) &&
	status=$(echo "$result" | head -n 1 | ack -o -1 '[1-5][0-9]{2}')
}

function api_client() {

	sess=$1
	shift

	member=$1
	shift

	anx_obj_id=$1
	shift

	url=$1
	shift

	authfile=$1
	shift

	method='get'
	if [[ $1 =~ ^(get|post|put|head|delete|GET|POST|PUT|HEAD|DELETE)$ ]]; then
		method=$1
		shift
	fi

	route="$url/$1"
	shift
	

	if [[ ! -z "$member" ]]; then
		if [[ $route =~ \? ]]; then
			route="$route&member_id=$member"
		else
			route="$route?member_id=$member"
		fi
	fi

	if [[ ! -z "$anx_obj_id" ]]; then
		if [[ $route =~ \? ]]; then
			route="$route&id=$anx_obj_id"
		else
			route="$route?id=$anx_obj_id"
		fi
	fi

	echo "$method $route"
	mycurl $sess $method $route $@

	if [[ "$status" == "401" ]]; then
		if [[ ! -s "$authfile" ]]; then
			echo "unable to authenticate.  create $authfile to enable auto-login"
			return 1
		fi
		printf 'logging in...'
		mycurl $sess 'POST' "$url/auth" @$authfile

		if [[ "$status" != "200" ]]; then
			echo 'unable to authenticate'
			return 1
		else
			echo ' done.'
		fi
		
		#now do it again
		mycurl $sess $method $route $@
	fi

	# if we are being piped somewhere then no colors
	if [ -t 1 ]; then
		echo "$result" | tail -n 1 | prettyjson | less -R
	else 
		echo "$result" | tail -n 1 | python -m json.tool
	fi
}

function parse_api(){
	local OPTIND
	while getopts ":ri:m:v:" opt; do
	  case $opt in
		v)
			ANX_SAND_API_VERSION="$OPTARG"
			;;
		m)
			ANX_SAND_API_MEMBER="$OPTARG"
			;;
		i)
			ANX_SAND_API_ID="$OPTARG"
			;;
		r)
			ANX_SAND_API_VERSION=''
			ANX_SAND_API_MEMBER=''
			echo 'member and version cleared!'
			return
			;;
		\?)
		  echo "Invalid option: -$OPTARG" >&2
			return
		  ;;
		:)
		  echo "Option -$OPTARG requires an argument." >&2
		  return
		  ;;
	  esac
	done
	shift $((OPTIND-1))

	if [[ "$#" -ge 1 ]]; then
		httpie_args+=" $1"
		shift
		parse_api "$@";
	else
		:
	fi

}

function sand(){
	local httpie_args
	local ANX_SAND_API_ID

	parse_api "$@"
	api_client 'sand' "$ANX_SAND_API_MEMBER" "$ANX_SAND_API_ID" "http://sand.api.appnexus.com/$ANX_SAND_API_VERSION" "$dataDir/auth-sand.private" $httpie_args
}

function prod(){
	api_client 'prod' "$ANX_PROD_API_MEMBER" "$ANX_SAND_API_ID" 'http://api.appnexus.com' "$dataDir/auth-prod.private" $@
}

